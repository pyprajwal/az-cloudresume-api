    name: Build and deploy Python project to Azure Function App - prajwalresumefunction

    on:
      push:
        branches:
          - main
      workflow_dispatch:

    env:
      AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
      PYTHON_VERSION: '3.10'

    jobs:
      build:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Setup Python version
            uses: actions/setup-python@v5
            with:
              python-version: ${{ env.PYTHON_VERSION }}

          - name: Create and start virtual environment
            run: |
              python -m venv venv
              source venv/bin/activate

          - name: Install dependencies
            run: pip install -r requirements.txt

          - name: Zip artifact for deployment
            run: |
              zip -r release.zip ./* -x venv/\*

          - name: Upload artifact for deployment job
            uses: actions/upload-artifact@v2
            with:
              name: python-app
              path: release.zip

      deploy:
        runs-on: ubuntu-latest
        needs: build
        environment:
          name: 'production'
          url: ${{ steps.deploy-to-function.outputs.webapp-url }}
        permissions:
          id-token: write # This is required for requesting the JWT

        steps:
          - name: Download artifact from build job
            uses: actions/download-artifact@v2
            with:
              name: python-app

          - name: Unzip artifact for deployment
            run: unzip -o release.zip

          - name: Deploy to Azure Functions
            uses: Azure/functions-action@v1
            with:
              app-name: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
              package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
              publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
              scm-do-build-during-deployment: true
              enable-oryx-build: true
            env:
              CosmosDB_URL: ${{ secrets.CosmosDB_URL }}
              CosmosDB_Key: ${{ secrets.CosmosDB_Key }}
              CosmosDB_Database: ${{ secrets.CosmosDB_Database }}
              CosmosDB_Container: ${{ secrets.CosmosDB_Container }}
